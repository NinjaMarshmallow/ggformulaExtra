% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggrepel.R
\name{gf_text_repel}
\alias{gf_text_repel}
\alias{gf_label_repel}
\title{Repulsive textual annotations}
\usage{
gf_text_repel(object = NULL, gformula = NULL, data = NULL, label, alpha,
  angle, color, family, fontface, group, hjust, lineheight, size, vjust,
  parse = FALSE, box.padding = 0.25, point.padding = 1e-06,
  segment.colour = NULL, segment.color = NULL, segment.size = 0.5,
  segment.alpha = NULL, min.segment.length = 0.5, arrow = NULL,
  force = 1, max.iter = 2000, nudge_x = 0, nudge_y = 0, xlim = c(NA,
  NA), ylim = c(NA, NA), direction = c("both", "y", "x"), seed = NA, xlab,
  ylab, title, subtitle, caption, stat = "identity", position = "identity",
  show.legend = NA, show.help = NULL, inherit = TRUE,
  environment = parent.frame(), ...)

gf_label_repel(object = NULL, gformula = NULL, data = NULL, label, alpha,
  angle, color, family, fontface, group, hjust, lineheight, size, vjust,
  parse = FALSE, box.padding = 0.25, label.padding = 0.25,
  point.padding = 1e-06, label.r = 0.15, label.size = 0.25,
  segment.colour = NULL, segment.color = NULL, segment.size = 0.5,
  segment.alpha = NULL, min.segment.length = 0.5, arrow = NULL,
  force = 1, max.iter = 2000, nudge_x = 0, nudge_y = 0, xlim = c(NA,
  NA), ylim = c(NA, NA), direction = c("both", "y", "x"), seed = NA, xlab,
  ylab, title, subtitle, caption, stat = "identity", position = "identity",
  show.legend = NA, show.help = NULL, inherit = TRUE,
  environment = parent.frame(), ...)
}
\arguments{
\item{object}{When chaining, this holds an object produced in the earlier portions
of the chain.  Most users can safely ignore this argument.
See details and examples.}

\item{gformula}{A formula with shape \code{y ~ x}.
Faceting can be achieved by including \code{|} in the formula.}

\item{data}{A data frame with the variables to be plotted.}

\item{label}{The text to be displayed.}

\item{alpha}{Opacity (0 = invisible, 1 = opaque).}

\item{angle}{An angle for rotating the text.}

\item{color}{A color or a formula used for mapping color.}

\item{family}{A font family.}

\item{fontface}{One of \code{"plain"}, \code{"bold"}, \code{"italic"}, or \code{"bold italic"}.}

\item{group}{Used for grouping.}

\item{hjust}{Numbers between 0 and 1 indicating how to justify
text relative the the specified location.}

\item{lineheight}{Line height.}

\item{size}{A numeric size or a formula used for mapping size.}

\item{vjust}{Numbers between 0 and 1 indicating how to justify
text relative the the specified location.}

\item{parse}{If \code{TRUE}, the labels will be parsed into expressions and
displayed as described in ?plotmath}

\item{box.padding}{Amount of padding around bounding box, as unit or number.
Defaults to 0.25. (Default unit is lines, but other units can be specified
by passing \code{unit(x, "units")}).}

\item{point.padding}{Amount of padding around labeled point, as unit or
number. Defaults to 0. (Default unit is lines, but other units can be
specified by passing \code{unit(x, "units")}).}

\item{segment.colour}{Colour of the line segment. Defaults to the same colour
as the text. In the unlikely event you specify both US and UK spellings of colour, the
US spelling will take precedence.}

\item{segment.color}{Colour of the line segment. Defaults to the same colour
as the text. In the unlikely event you specify both US and UK spellings of colour, the
US spelling will take precedence.}

\item{segment.size}{Width of line segment connecting the data point to
the text label, in mm.}

\item{segment.alpha}{Transparency of the line segment. Defaults to the same
transparency as the text.}

\item{min.segment.length}{Skip drawing segments shorter than this, as unit or
number. Defaults to 0.5. (Default unit is lines, but other units can be
specified by passing \code{unit(x, "units")}).}

\item{arrow}{specification for arrow heads, as created by \code{\link[grid]{arrow}}}

\item{force}{Force of repulsion between overlapping text labels. Defaults
to 1.}

\item{max.iter}{Maximum number of iterations to try to resolve overlaps.
Defaults to 2000.}

\item{nudge_x}{Horizontal and vertical adjustment to nudge labels by.
Useful for offsetting text from points, particularly on discrete scales.}

\item{nudge_y}{Horizontal and vertical adjustment to nudge labels by.
Useful for offsetting text from points, particularly on discrete scales.}

\item{xlim}{Limits for the x and y axes. Text labels will be constrained
to these limits. By default, text labels are constrained to the entire plot
area.}

\item{ylim}{Limits for the x and y axes. Text labels will be constrained
to these limits. By default, text labels are constrained to the entire plot
area.}

\item{direction}{"both", "x", or "y" -- direction in which to adjust position of labels}

\item{seed}{Random seed passed to \code{\link[base]{set.seed}}. Defaults to
\code{NA}, which means that \code{set.seed} will not be called.}

\item{xlab}{Label for x-axis. See also \code{\link[=gf_labs]{gf_labs()}}.}

\item{ylab}{Label for y-axis. See also \code{\link[=gf_labs]{gf_labs()}}.}

\item{title}{Title, sub-title, and caption for the plot.
See also \code{\link[=gf_labs]{gf_labs()}}.}

\item{subtitle}{Title, sub-title, and caption for the plot.
See also \code{\link[=gf_labs]{gf_labs()}}.}

\item{caption}{Title, sub-title, and caption for the plot.
See also \code{\link[=gf_labs]{gf_labs()}}.}

\item{stat}{A character string naming the stat used to make the layer.}

\item{position}{Either a character string naming the position function used
for the layer or a position object returned from a call to a position function.}

\item{show.legend}{A logical indicating whether this layer should be included in
the legends.  \code{NA}, the default, includes layer in the legends if any
of the attributes of the layer are mapped.}

\item{show.help}{If \code{TRUE}, display some minimal help.}

\item{inherit}{A logical indicating whether default attributes are inherited.}

\item{environment}{An environment in which to look for variables not found in \code{data}.}

\item{...}{Additional arguments.  Typically these are
(a) ggplot2 aesthetics to be set with \code{attribute = value},
(b) ggplot2 aesthetics to be mapped with \code{attribute = ~expression}, or
(c) attributes of the layer as a whole, which are set with \code{attribute = value}.}

\item{label.padding}{Amount of padding around label. Defaults to 0.25 lines.}

\item{label.r}{Radius of rounded corners. Defaults to 0.15 lines.}

\item{label.size}{Size of label border, in mm.}
}
\value{
a gg object
}
\description{
`gf_text_repel()` adds a layer of text; `gf_label_repel()` additionally
draws a rectangle beneath the text, making it easier to read.  In both
cases the labels repel away form each otehr and the data points.
}
\details{
Positional aesthetics are specified using the formula in \code{gformula}.
Setting and mapping of additional attributes can be done through the
use of additional arguments.
Attributes can be set can be set using arguments of the form \code{attribute = value} or
mapped using arguments of the form \code{attribute = ~ expression}.

In formulas of the form \code{A | B}, \code{B} will be used to form facets using
\code{\link[=facet_wrap]{facet_wrap()}} or \code{\link[=facet_grid]{facet_grid()}}.
This provides an alternative to
\code{\link[=gf_facet_wrap]{gf_facet_wrap()}} and
\code{\link[=gf_facet_grid]{gf_facet_grid()}} that is terser and may feel more familiar to users
of \pkg{lattice}.

Evaluation of the \pkg{ggplot2} code occurs in the environment of \code{gformula}.
This will typically do the right thing when formulas are created on the fly, but might not
be the right thing if formulas created in one environment are used to create plots
in another.
}
\section{\code{geom_label_repel}}{


Currently \code{geom_label_repel} does not support the \code{rot} argument
and is considerably slower than \code{geom_text_repel}. The \code{fill}
aesthetic controls the background colour of the label.

}

\section{Alignment with \code{hjust} or \code{vjust}}{


The arguments \code{hjust} and \code{vjust} are supported, but they only
control the initial positioning, so repulsive forces may disrupt alignment.
Alignment with \code{hjust} will be preserved if labels only move up and down
by using \code{direction="y"}. For \code{vjust}, use \code{direction="x"}.

}

\examples{
gf_text(Sepal.Length ~ Sepal.Width, data = iris,
  label = ~Species, color = ~Species, size = 2, angle = 30)
gf_point(Sepal.Length ~ Sepal.Width, data = iris, color = ~Species) \%>\%
gf_text(Sepal.Length ~ Sepal.Width, data = iris,
  label = ~Species, color = ~Species,
  size = 2, angle = 0, hjust = 0, nudge_x  = 0.1, nudge_y = 0.1)

if (require(dplyr)) {
  iris_means <-
    iris \%>\%
    group_by(Species) \%>\%
    summarise(Sepal.Length = mean(Sepal.Length), Sepal.Width = mean(Sepal.Width))
  gf_point(Sepal.Length ~ Sepal.Width, data = iris, color = ~ Species) \%>\%
  gf_label(Sepal.Length ~ Sepal.Width, data = iris_means,
    label = ~Species, color = ~Species, size = 2, alpha = 0.7)
}
}
\seealso{
\code{\link[ggplot2:geom_text]{ggplot2::geom_text()}}
}
